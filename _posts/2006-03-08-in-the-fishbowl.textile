--- 
title: In the Fishbowl
typo_id: 897
layout: post
---
At last night's "XP Cinci":http://xpcincinnati.org/ we did an interesting exercise called "The Fishbowl".  "Mark Windholtz":http://railsstudio.com/ setup his powerbook with a terminal, Safari, "TextMate":http://macromates.com/ and a time tracking application he had been working on.  We then each took turns pair programming on the big screen.  While there were two of us "at the console" all the time, we swapped one of them out every 10 minutes.

The exercise was interesting for several reasons.  Mostly it turned out to be a good example of what test driven development looks like in "Ruby on Rails":http://rubyonrails.com.  The skill level of xp-cinci is split pretty evenly.  About half of us have done significant RoR development and the other half is either just interested or just learning.  Regardless of skill level though, no one was going to code in public at an XP meeting without writing tests.  The best way to learn TDD is by doing.  Until you've lived through the development cycle of TDD it's hard to really grasp what it feels like.

The other benefit from the exercise was a fairly lively discussion on "this is how we do it in Rails" versus "this is what I'm used to in Java."  Most of xp-cinci comes from a strong Java background.  Even though about half of us are "ruby nubies," pretty much everyone has a very strong developer background with one technology or another.  Here's a for-instance.  I coded up a method that used @MyModel.find_by_id(params[:id])@ and was asked why I used @find_by_id@ rather than just @find@.  I said that I liked how @find_by_id@ returned nil so I could use it as a false value when doing error checking.  As a long-time Java smart-guy, "Ed Summerfield":http://esumerfield.blogspot.com/ was pretty quick to jump on this as a bad practice.  He demonstrated how his Rails controllers looked using @begin@ and @rescue@.  I'm not entirely convinced that assigning nil to an object as a fail condition is bad, but his code looked fairly neat with all his error trapping in @rescue@ blocks.

While the skill levels of various members varied, our application we worked on wasn't really the typical "hello world" style application of tutorials.  We started with a working application.  Mark and Scott are actually using the application as part of their consulting work at "Rails Studio":http://railsstudio.com.  This gave us the chance to work in a more "normal" fare.  We had an existing database we were migrating; we had existing code we had to live within; and we had a "real" customer looking for "real" improvements to their application.

Last night's meeting was different from our usual fare.  It was back to a hands on style where we actually wrote code.  While we didn't get very far in terms of feature points, I think we made a lot of progress in general understanding of both coding practices and Rails development.  I hope we continue doing more and talking less.
