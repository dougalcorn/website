--- 
title: Small Teams are Better
typo_id: 381
layout: post
---
In the course of my Lisp experimenting, it's clear I need to read more.  One of the most recommended books on how to think in Lisp is <a href="http:://www.paulgraham.com/" target="_top">Paul Graham</a>'s <em><a href="http://paulgraham.com/onlisp.html" target="_top">On Lisp</a></em>.  Early on he makes this analysis about small teams.  This is a good example of PG's optimism when it comes to having good programmers and giving them good tools.
<p />
<blockquote>
In <em>The Mythical Man-Month</em>, Frederick Brooks proposed that the productivity of a group of programmers does not grow linearly with its size.  As the size of the group increases, the productivity of individual programmers goes down.  The experience of Lisp programming suggests a more cheerful way to phrase this law: as the size of the group decreases, the productivity of individual programmers goes up.  A small group wins, relatively speaking, simply because it's smaller.  When a small group also takes advantage of the techniques that Lisp makes possible, it can win outright.
<p />
-- Paul Graham, <em>On Lisp</em>, page 5
</blockquote>
